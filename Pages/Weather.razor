@page "/weather"
@using Newtonsoft;                                                                                                      
@using M347_Data_Fetcher.Api;                                                                                                       
@using M347_Data_Fetcher.Data;
@using System.Timers;
@using Marten
@inject IDocumentSession Session
                                                                                                                       
<h1>Weather</h1>                                                                                                       
                                                                                                                       
<MudTextField Label="City" Variant="Variant.Text" @bind-Value="cityName"></MudTextField>

<br />
                                                                                                                       
                                                                                                                       
<p>                                                                                                                  
    <h3>Name: <b style="font-weight: lighter"> @jsonConverted?.Location.Name </b></h3>
    <h3>Region: <b style="font-weight: lighter"> @jsonConverted?.Location.Region </b></h3>
    <h3>Local Time: <b style="font-weight: lighter"> @jsonConverted?.Location.Localtime </b></h3>                                                     
    <h3>Temperatur in C: <b style="font-weight: lighter"> @jsonConverted?.Current.TempC </b></h3>
    <h3>Wind speed in kph: <b style="font-weight: lighter"> @jsonConverted?.Current.WindKph </b></h3>
    <h3>Humidity in percent: <b style="font-weight: lighter"> @jsonConverted?.Current.Humidity % </b></h3>
    <h3>Temperature feels like: <b style="font-weight: lighter"> @jsonConverted?.Current.FeelsLikeC </b></h3>
</p>

@jsonConverted

<br />

<MudButton Style="border: 3px solid grey" @onclick="OnInitializedAsync">Fetch Weather</MudButton>
<br />


@code {
    [Inject] public IWeatherApi WeatherApi { get; set; } = null!;
    [Inject] public IDocumentStore Store { get; set; }

    Response? jsonConverted;

    string debug = string.Empty;

    private System.Timers.Timer aTimer { get; set; } = null!;

    private string cityName { get; set; } = "London";


    protected override async Task OnInitializedAsync()
    {
        // on page load
        // create timer
        var response = await WeatherApi.GetWeather("1c39ca929b4b4d23a4364338231708", cityName);

        jsonConverted = JsonConvert.DeserializeObject<Response>(response);

        // Open a session for querying, loading, and updating documents
        await using var session = Store.LightweightSession();

        var weather = new Response
            {
                Current = jsonConverted.Current,
                Location = jsonConverted.Location
            };
        session.Store(weather);

        await session.SaveChangesAsync();

        aTimer = new System.Timers.Timer(30000);
        aTimer.Elapsed += FetchWeatherData;
        aTimer.Start();

        await base.OnInitializedAsync();
    }


    private async void FetchWeatherData(Object source, ElapsedEventArgs e)
    {
        var response = await WeatherApi.GetWeather("1c39ca929b4b4d23a4364338231708", cityName);
        
        jsonConverted = JsonConvert.DeserializeObject<Response>(response);
    }
}
